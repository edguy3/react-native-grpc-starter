// Autogenerated. Do not modify!
// package: Auth
// file: auth.proto

import Foundation
import SwiftGRPC

@objc(AuthService)
class AuthService: GrpcService {


  @objc func signIn(_ jsReq: [String: Any], resolve: RCTPromiseResolveBlock, reject: RCTPromiseRejectBlock) -> Void {
    let svc = AuthGrpcClient
    var req = Auth_SignInRequest()

    // request mapping
    req.username = jsReq["username"] as? String ?? ""
    req.password = jsReq["password"] as? String ?? ""
    // end request mapping

    do {
      let res = try svc.signIn(req)
      var jsRes: [String: Any] = [:]

      // response mapping
      jsRes["token"] = res.token
      // end response mapping

      resolve(jsRes)
    } catch {
      reject("ERROR", error.localizedDescription, error)
    }
  }

  
  @objc
  static func requiresMainQueueSetup() -> Bool {
    return false
  }
}
